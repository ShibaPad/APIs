{"version":3,"sources":["../../src/middlewares/validation.middleware.ts"],"sourcesContent":["import { plainToClass } from 'class-transformer';\nimport { validate, ValidationError } from 'class-validator';\nimport { RequestHandler } from 'express';\nimport { HttpException } from '@exceptions/HttpException';\n\nconst validationMiddleware = (\n  type: any,\n  value: string | 'body' | 'query' | 'params' = 'body',\n  skipMissingProperties = false,\n  whitelist = true,\n  forbidNonWhitelisted = true,\n): RequestHandler => {\n  return (req, res, next) => {\n    validate(plainToClass(type, req[value]), { skipMissingProperties, whitelist, forbidNonWhitelisted }).then((errors: ValidationError[]) => {\n      if (errors.length > 0) {\n        const message = errors.map((error: ValidationError) => Object.values(error.constraints)).join(', ');\n        next(new HttpException(400, message));\n      } else {\n        next();\n      }\n    });\n  };\n};\n\nexport default validationMiddleware;\n"],"names":["validationMiddleware","type","value","skipMissingProperties","whitelist","forbidNonWhitelisted","req","res","next","then","errors","length","message","map","error","Object","values","constraints","join"],"mappings":";;;;;AAA6B,GAAmB,CAAnB,iBAAmB;AACN,GAAiB,CAAjB,eAAiB;AAE7B,GAA2B,CAA3B,cAA2B;AAEzD,KAAK,CAACA,oBAAoB,IACxBC,IAAS,EACTC,KAA2C,GAAG,CAAM,OACpDC,qBAAqB,GAAG,KAAK,EAC7BC,SAAS,GAAG,IAAI,EAChBC,oBAAoB,GAAG,IAAI,GACR,CAAC;IACpB,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,GAAK,CAAC;YAXY,eAAiB,eAD9B,iBAAmB,eAatBP,IAAI,EAAEK,GAAG,CAACJ,KAAK,IAAI,CAAC;YAACC,qBAAqB;YAAEC,SAAS;YAAEC,oBAAoB;QAAC,CAAC,EAAEI,IAAI,EAAEC,MAAyB,GAAK,CAAC;YACxI,EAAE,EAAEA,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACtB,KAAK,CAACC,OAAO,GAAGF,MAAM,CAACG,GAAG,EAAEC,KAAsB,GAAKC,MAAM,CAACC,MAAM,CAACF,KAAK,CAACG,WAAW;kBAAGC,IAAI,CAAC,CAAI;gBAClGV,IAAI,CAAC,GAAG,CAbc,cAA2B,eAa1B,GAAG,EAAEI,OAAO;YACrC,CAAC,MAAM,CAAC;gBACNJ,IAAI;YACN,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;eAEcR,oBAAoB"}