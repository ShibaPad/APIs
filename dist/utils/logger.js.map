{"version":3,"sources":["../../src/utils/logger.ts"],"sourcesContent":["import config from 'config';\nimport { existsSync, mkdirSync } from 'fs';\nimport { join } from 'path';\nimport winston from 'winston';\nimport winstonDaily from 'winston-daily-rotate-file';\n\n// logs dir\nconst logDir: string = join(__dirname, config.get('log.dir'));\n\nif (!existsSync(logDir)) {\n  mkdirSync(logDir);\n}\n\n// Define log format\nconst logFormat = winston.format.printf(({ timestamp, level, message }) => `${timestamp} ${level}: ${message}`);\n\n/*\n * Log Level\n * error: 0, warn: 1, info: 2, http: 3, verbose: 4, debug: 5, silly: 6\n */\nconst logger = winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({\n      format: 'YYYY-MM-DD HH:mm:ss',\n    }),\n    logFormat,\n  ),\n  transports: [\n    // debug log setting\n    new winstonDaily({\n      level: 'debug',\n      datePattern: 'YYYY-MM-DD',\n      dirname: logDir + '/debug', // log file /logs/debug/*.log in save\n      filename: `%DATE%.log`,\n      maxFiles: 30, // 30 Days saved\n      json: false,\n      zippedArchive: true,\n    }),\n    // error log setting\n    new winstonDaily({\n      level: 'error',\n      datePattern: 'YYYY-MM-DD',\n      dirname: logDir + '/error', // log file /logs/error/*.log in save\n      filename: `%DATE%.log`,\n      maxFiles: 30, // 30 Days saved\n      handleExceptions: true,\n      json: false,\n      zippedArchive: true,\n    }),\n  ],\n});\n\nlogger.add(\n  new winston.transports.Console({\n    format: winston.format.combine(winston.format.splat(), winston.format.colorize()),\n  }),\n);\n\nconst stream = {\n  write: (message: string) => {\n    logger.info(message.substring(0, message.lastIndexOf('\\n')));\n  },\n};\n\nexport { logger, stream };\n"],"names":["logDir","__dirname","get","logFormat","format","printf","timestamp","level","message","logger","createLogger","combine","transports","datePattern","dirname","filename","maxFiles","json","zippedArchive","handleExceptions","add","Console","splat","colorize","stream","write","info","substring","lastIndexOf"],"mappings":";;;;;AAAmB,GAAQ,CAAR,OAAQ;AACW,GAAI,CAAJ,GAAI;AACrB,GAAM,CAAN,KAAM;AACP,GAAS,CAAT,QAAS;AACJ,GAA2B,CAA3B,uBAA2B;;;;;;AAGpD,KAAK,CAACA,MAAM,OALS,KAAM,OAKCC,SAAS,EAPlB,OAAQ,SAOmBC,GAAG,CAAC,CAAS;AAE3D,EAAE,OARoC,GAAI,aAQ1BF,MAAM,GAAG,CAAC;QARY,GAAI,YAS9BA,MAAM;AAClB,CAAC;AAGD,KAAK,CAACG,SAAS,GAXK,QAAS,SAWHC,MAAM,CAACC,MAAM,EAAE,CAAC,CAACC,SAAS,GAAEC,KAAK,GAAEC,OAAO,EAAC,CAAC,MAAQF,SAAS,CAAC,CAAC,EAAEC,KAAK,CAAC,EAAE,EAAEC,OAAO;;AAM5G,KAAK,CAACC,MAAM,GAjBQ,QAAS,SAiBNC,YAAY,CAAC,CAAC;IACnCN,MAAM,EAlBY,QAAS,SAkBXA,MAAM,CAACO,OAAO,CAlBZ,QAAS,SAmBjBP,MAAM,CAACE,SAAS,CAAC,CAAC;QACxBF,MAAM,EAAE,CAAqB;IAC/B,CAAC,GACDD,SAAS;IAEXS,UAAU,EAAE,CAAC;QAEX,GAAG,CAzBkB,uBAA2B,SAyB/B,CAAC;YAChBL,KAAK,EAAE,CAAO;YACdM,WAAW,EAAE,CAAY;YACzBC,OAAO,EAAEd,MAAM,GAAG,CAAQ;YAC1Be,QAAQ,GAAG,UAAU;YACrBC,QAAQ,EAAE,EAAE;YACZC,IAAI,EAAE,KAAK;YACXC,aAAa,EAAE,IAAI;QACrB,CAAC;QAED,GAAG,CAnCkB,uBAA2B,SAmC/B,CAAC;YAChBX,KAAK,EAAE,CAAO;YACdM,WAAW,EAAE,CAAY;YACzBC,OAAO,EAAEd,MAAM,GAAG,CAAQ;YAC1Be,QAAQ,GAAG,UAAU;YACrBC,QAAQ,EAAE,EAAE;YACZG,gBAAgB,EAAE,IAAI;YACtBF,IAAI,EAAE,KAAK;YACXC,aAAa,EAAE,IAAI;QACrB,CAAC;IACH,CAAC;AACH,CAAC;AAEDT,MAAM,CAACW,GAAG,CACR,GAAG,CAlDe,QAAS,SAkDfR,UAAU,CAACS,OAAO,CAAC,CAAC;IAC9BjB,MAAM,EAnDU,QAAS,SAmDTA,MAAM,CAACO,OAAO,CAnDd,QAAS,SAmDcP,MAAM,CAACkB,KAAK,IAnDnC,QAAS,SAmDsClB,MAAM,CAACmB,QAAQ;AAChF,CAAC;AAGH,KAAK,CAACC,MAAM,GAAG,CAAC;IACdC,KAAK,GAAGjB,OAAe,GAAK,CAAC;QAC3BC,MAAM,CAACiB,IAAI,CAAClB,OAAO,CAACmB,SAAS,CAAC,CAAC,EAAEnB,OAAO,CAACoB,WAAW,CAAC,CAAI;IAC3D,CAAC;AACH,CAAC;QAEQnB,MAAM,GAANA,MAAM;QAAEe,MAAM,GAANA,MAAM"}