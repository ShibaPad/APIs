{"version":3,"sources":["../../src/tests/auth.test.ts"],"sourcesContent":["import bcrypt from 'bcrypt';\nimport mongoose from 'mongoose';\nimport request from 'supertest';\nimport App from '@/app';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport AuthRoute from '@routes/auth.route';\n\nafterAll(async () => {\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\n});\n\ndescribe('Testing Auth', () => {\n  describe('[POST] /signup', () => {\n    it('response should have the Create userData', async () => {\n      const userData: CreateUserDto = {\n        email: 'test@email.com',\n        password: 'q1w2e3r4!',\n      };\n\n      const authRoute = new AuthRoute();\n      const users = authRoute.authController.authService.users;\n\n      users.findOne = jest.fn().mockReturnValue(null);\n      users.create = jest.fn().mockReturnValue({\n        _id: '60706478aad6c9ad19a31c84',\n        email: userData.email,\n        password: await bcrypt.hash(userData.password, 10),\n      });\n\n      (mongoose as any).connect = jest.fn();\n      const app = new App([authRoute]);\n      return request(app.getServer()).post(`${authRoute.path}signup`).send(userData);\n    });\n  });\n\n  describe('[POST] /login', () => {\n    it('response should have the Set-Cookie header with the Authorization token', async () => {\n      const userData: CreateUserDto = {\n        email: 'test@email.com',\n        password: 'q1w2e3r4!',\n      };\n\n      const authRoute = new AuthRoute();\n      const users = authRoute.authController.authService.users;\n\n      users.findOne = jest.fn().mockReturnValue({\n        _id: '60706478aad6c9ad19a31c84',\n        email: userData.email,\n        password: await bcrypt.hash(userData.password, 10),\n      });\n\n      (mongoose as any).connect = jest.fn();\n      const app = new App([authRoute]);\n      return request(app.getServer())\n        .post(`${authRoute.path}login`)\n        .send(userData)\n        .expect('Set-Cookie', /^Authorization=.+/);\n    });\n  });\n\n  // describe('[POST] /logout', () => {\n  //   it('logout Set-Cookie Authorization=; Max-age=0', async () => {\n  //     const userData: User = {\n  //       _id: '60706478aad6c9ad19a31c84',\n  //       email: 'test@email.com',\n  //       password: await bcrypt.hash('q1w2e3r4!', 10),\n  //     };\n\n  //     const authRoute = new AuthRoute();\n  //     const users = authRoute.authController.authService.users;\n\n  //     users.findOne = jest.fn().mockReturnValue(userData);\n\n  //     (mongoose as any).connect = jest.fn();\n  //     const app = new App([authRoute]);\n  //     return request(app.getServer())\n  //       .post(`${authRoute.path}logout`)\n  //       .send(userData)\n  //       .set('Set-Cookie', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ')\n  //       .expect('Set-Cookie', /^Authorization=\\; Max-age=0/);\n  //   });\n  // });\n});\n"],"names":["afterAll","Promise","resolve","setTimeout","describe","it","userData","email","password","authRoute","users","authController","authService","findOne","jest","fn","mockReturnValue","create","_id","hash","connect","app","getServer","post","path","send","expect"],"mappings":";AAAmB,GAAQ,CAAR,OAAQ;AACN,GAAU,CAAV,SAAU;AACX,GAAW,CAAX,UAAW;AACf,GAAO,CAAP,IAAO;AAED,GAAoB,CAApB,UAAoB;;;;;;AAE1CA,QAAQ,WAAa,CAAC;IACpB,KAAK,CAAC,GAAG,CAACC,OAAO,EAAOC,OAAO,GAAIC,UAAU,KAAOD,OAAO;UAAI,GAAG;;AACpE,CAAC;AAEDE,QAAQ,CAAC,CAAc,mBAAQ,CAAC;IAC9BA,QAAQ,CAAC,CAAgB,qBAAQ,CAAC;QAChCC,EAAE,CAAC,CAA0C,qDAAc,CAAC;YAC1D,KAAK,CAACC,QAAQ,GAAkB,CAAC;gBAC/BC,KAAK,EAAE,CAAgB;gBACvBC,QAAQ,EAAE,CAAW;YACvB,CAAC;YAED,KAAK,CAACC,SAAS,GAAG,GAAG,CAdL,UAAoB;YAepC,KAAK,CAACC,KAAK,GAAGD,SAAS,CAACE,cAAc,CAACC,WAAW,CAACF,KAAK;YAExDA,KAAK,CAACG,OAAO,GAAGC,IAAI,CAACC,EAAE,GAAGC,eAAe,CAAC,IAAI;YAC9CN,KAAK,CAACO,MAAM,GAAGH,IAAI,CAACC,EAAE,GAAGC,eAAe,CAAC,CAAC;gBACxCE,GAAG,EAAE,CAA0B;gBAC/BX,KAAK,EAAED,QAAQ,CAACC,KAAK;gBACrBC,QAAQ,EAAE,KAAK,CA1BJ,OAAQ,SA0BIW,IAAI,CAACb,QAAQ,CAACE,QAAQ,EAAE,EAAE;YACnD,CAAC;YA1Bc,SAAU,SA4BPY,OAAO,GAAGN,IAAI,CAACC,EAAE;YACnC,KAAK,CAACM,GAAG,GAAG,GAAG,CA3BL,IAAO,SA2BG,CAACZ;gBAAAA,SAAS;YAAA,CAAC;YAC/B,MAAM,KA7BQ,UAAW,UA6BVY,GAAG,CAACC,SAAS,IAAIC,IAAI,IAAId,SAAS,CAACe,IAAI,CAAC,MAAM,GAAGC,IAAI,CAACnB,QAAQ;QAC/E,CAAC;IACH,CAAC;IAEDF,QAAQ,CAAC,CAAe,oBAAQ,CAAC;QAC/BC,EAAE,CAAC,CAAyE,oFAAc,CAAC;YACzF,KAAK,CAACC,QAAQ,GAAkB,CAAC;gBAC/BC,KAAK,EAAE,CAAgB;gBACvBC,QAAQ,EAAE,CAAW;YACvB,CAAC;YAED,KAAK,CAACC,SAAS,GAAG,GAAG,CArCL,UAAoB;YAsCpC,KAAK,CAACC,KAAK,GAAGD,SAAS,CAACE,cAAc,CAACC,WAAW,CAACF,KAAK;YAExDA,KAAK,CAACG,OAAO,GAAGC,IAAI,CAACC,EAAE,GAAGC,eAAe,CAAC,CAAC;gBACzCE,GAAG,EAAE,CAA0B;gBAC/BX,KAAK,EAAED,QAAQ,CAACC,KAAK;gBACrBC,QAAQ,EAAE,KAAK,CAhDJ,OAAQ,SAgDIW,IAAI,CAACb,QAAQ,CAACE,QAAQ,EAAE,EAAE;YACnD,CAAC;YAhDc,SAAU,SAkDPY,OAAO,GAAGN,IAAI,CAACC,EAAE;YACnC,KAAK,CAACM,GAAG,GAAG,GAAG,CAjDL,IAAO,SAiDG,CAACZ;gBAAAA,SAAS;YAAA,CAAC;YAC/B,MAAM,KAnDQ,UAAW,UAmDVY,GAAG,CAACC,SAAS,IACzBC,IAAI,IAAId,SAAS,CAACe,IAAI,CAAC,KAAK,GAC5BC,IAAI,CAACnB,QAAQ,EACboB,MAAM,CAAC,CAAY;QACxB,CAAC;IACH,CAAC;AAwBH,CAAC"}