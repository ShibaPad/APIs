{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import '@/index';\nimport config from 'config';\nimport compression from 'compression';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport express from 'express';\nimport helmet from 'helmet';\nimport hpp from 'hpp';\nimport morgan from 'morgan';\nimport { connect, set } from 'mongoose';\nimport swaggerJSDoc from 'swagger-jsdoc';\nimport swaggerUi from 'swagger-ui-express';\nimport { dbConnection } from '@databases';\nimport { Routes } from '@interfaces/routes.interface';\nimport errorMiddleware from '@middlewares/error.middleware';\nimport { logger, stream } from '@utils/logger';\n\nclass App {\n  public app: express.Application;\n  public port: string | number;\n  public env: string;\n\n  constructor(routes: Routes[]) {\n    this.app = express();\n    this.port = process.env.PORT || 3000;\n    this.env = process.env.NODE_ENV || 'development';\n\n    this.connectToDatabase();\n    this.initializeMiddlewares();\n    this.initializeRoutes(routes);\n    this.initializeSwagger();\n    this.initializeErrorHandling();\n  }\n\n  public listen() {\n    this.app.listen(this.port, () => {\n      logger.info(`=================================`);\n      logger.info(`======= ENV: ${this.env} =======`);\n      logger.info(`ðŸš€ App listening on the port ${this.port}`);\n      logger.info(`=================================`);\n    });\n  }\n\n  public getServer() {\n    return this.app;\n  }\n\n  private connectToDatabase() {\n    if (this.env !== 'production') {\n      set('debug', true);\n    }\n\n    connect(dbConnection.url, dbConnection.options);\n  }\n\n  private initializeMiddlewares() {\n    this.app.use(morgan(config.get('log.format'), { stream }));\n    this.app.use(cors({ origin: config.get('cors.origin'), credentials: config.get('cors.credentials') }));\n    this.app.use(hpp());\n    this.app.use(helmet());\n    this.app.use(compression());\n    this.app.use(express.json());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(cookieParser());\n  }\n\n  private initializeRoutes(routes: Routes[]) {\n    routes.forEach(route => {\n      this.app.use('/', route.router);\n    });\n  }\n\n  private initializeSwagger() {\n    const options = {\n      swaggerDefinition: {\n        info: {\n          title: 'REST API',\n          version: '1.0.0',\n          description: 'Example docs',\n        },\n      },\n      apis: ['swagger.yaml'],\n    };\n\n    const specs = swaggerJSDoc(options);\n    this.app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\n  }\n\n  private initializeErrorHandling() {\n    this.app.use(errorMiddleware);\n  }\n}\n\nexport default App;\n"],"names":["App","listen","app","port","info","env","getServer","connectToDatabase","url","options","initializeMiddlewares","use","get","stream","origin","credentials","json","urlencoded","extended","initializeRoutes","routes","forEach","route","router","initializeSwagger","swaggerDefinition","title","version","description","apis","specs","serve","setup","initializeErrorHandling","process","PORT","NODE_ENV"],"mappings":"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"}